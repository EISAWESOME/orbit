'use strict';ob.factory('Images',['$resource','$location','$rootScope','$http',function($resource,$location,$rootScope,$http){return{url:function(){if($location.search().url){return '../'+$location.search().url+'/'}
else return '../merycoidon/'},loadingQueue:[],loadSlot:0,loaded:0,firstLevelLoaded:0,loadxml:function(){return $http.get(this.url()+'content.xml')},loadDetails:function(){return $http.get(this.url()+'content2.xml')},loadLevel:function(lvl){let time=new Date();let scope=this.level[lvl];let f=!1;for(let i=0;i<scope.resources.length;i++){this.loadResources(lvl,i,f)}},loadResources:function(lvl,angle,priority){priority=(typeof priority!=="undefined")?priority:!0;if(priority){for(let i=0;i<this.level[lvl].resources[angle].length;i++)
  this.loadingQueue.unshift([lvl,angle,i]);}
else{for(let i=0;i<this.level[lvl].resources[angle].length;i++)
  this.loadingQueue.push([lvl,angle,i]);}
  this.loadQueuedImages()},resourcesLoaded:function(lvl,agl){let angle=this.level[lvl].resources[agl];for(let i=0;i<angle.length;i++){if(!angle[i].loaded)return!1}
  return!0},loadImage:function(lvl,angle,pos,fromQueue){fromQueue=fromQueue||!1;let self=this.level[lvl].resources[angle][pos];let source=this.level[lvl].resources[angle][pos].img;if(typeof source!=='string'){if(fromQueue)this.loadQueuedImages();return!0}
else{let scope=this;let img=new Image();img.src=source;scope.level[lvl].resources[angle][pos].img=img;scope.loadSlot++;$http.get(source,{method:'GET'}).then(function(){self.loaded=!0;scope.loadSlot--;if(fromQueue){scope.loadQueuedImages()}
  if(scope.firstLevelLoaded<scope.nbAngle&&lvl==scope.level.length-1){scope.firstLevelLoaded++;scope.loading(scope.firstLevelLoaded,scope.nbAngle)}});return!1}},loadQueuedImages:function(){if(this.loadSlot<3&&this.loadingQueue.length>0){let current=this.loadingQueue.shift();if(this.loadImage(current[0],current[1],current[2],!0)){}}},loading:function(current,max){let percent=current*100/max;percent=percent.toFixed(1);if(percent>=100){$rootScope.$emit('onComplete')}else{$rootScope.$emit('onLoading',percent)}}}}])
